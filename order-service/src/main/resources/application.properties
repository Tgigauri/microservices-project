spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=366183Tornike
spring.jpa.hibernate.ddl-auto=update
server.port=8081
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j

#see different states of CB
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
#Buffer size of the events
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#Make sure it won't open CB Right Away, some number of Requests
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
#Number of Requests 5 failed requests
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
#50% of calls are failed
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
#How much time to wait in open before going to half open
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
#How many calls in half open state to check if communication works fine
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
#Automatically transition from open to half-open
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true


#Timeout, Slow Connection
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Retry Properties, Retry 3 times if we don't receive reply in 5s
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s


#Kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.cloud.orderservice.event.OrderPlacedEvent